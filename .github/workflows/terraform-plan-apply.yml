name: Terraform Plan-Apply
on:
  workflow_dispatch:
    inputs:
        environment:
            type: choice
            description: Environment
            options:
            - test
        terraform_version: 
            description: 'Terraform Version'
            required: true
            default: 1.3.7

env:
  WORKING-DIRECTORY: ./deployments/kv-secrets-provider

jobs:
    terraform_plan:
      runs-on: ubuntu-latest
      environment: ${{ inputs.environment }}
      permissions:
        id-token: write
        contents: read
        pages: write
      defaults:
        run:
          shell: bash
          working-directory: ${{ env.WORKING-DIRECTORY }}

      steps:
      - uses: actions/checkout@v3

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config=resource_group_name=${{ vars.AZURERM_RESOURCE_GROUP_NAME }} \
            -backend-config=storage_account_name=${{ vars.AZURERM_STORAGE_ACCOUNT_NAME }} \
            -backend-config=container_name=${{ vars.AZURERM_CONTAINER_NAME }} \
            -backend-config=key=${{ vars.AZURERM_KEY }}
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -var "environment=${{ inputs.environment }}" --out=./out.tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Upload tfplan artifact
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan
          path: ${{ env.WORKING-DIRECTORY }}/out.tfplan
    
    terraform_apply:
      runs-on: ubuntu-latest
      environment: ${{ inputs.environment }}
      needs: terraform_plan
      permissions:
        id-token: write
        contents: read
        pages: write
      defaults:
        run:
          shell: bash
          working-directory: ${{ env.WORKING-DIRECTORY }}

      steps:
        - uses: actions/checkout@v3
        
        - name: Download tfplan artifact
          uses: actions/download-artifact@v3
          with:
            name: tf-plan
            path: ${{ env.WORKING-DIRECTORY }}

        - name: Az CLI login
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: ${{ inputs.terraform_version }}
            terraform_wrapper: false
  
        - name: Terraform Init
          id: init
          run: |
            terraform init \
              -backend-config=resource_group_name=${{ vars.AZURERM_RESOURCE_GROUP_NAME }} \
              -backend-config=storage_account_name=${{ vars.AZURERM_STORAGE_ACCOUNT_NAME }} \
              -backend-config=container_name=${{ vars.AZURERM_CONTAINER_NAME }} \
              -backend-config=key=${{ vars.AZURERM_KEY }}
          env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            ARM_USE_OIDC: true

        - name: Terraform Apply
          id: apply
          run: terraform apply out.tfplan
          env:
            ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            ARM_USE_OIDC: true

        - name: Terraform output
          id: output
          run: |
            output_json=$(terraform output -json) \
            echo $output_json
